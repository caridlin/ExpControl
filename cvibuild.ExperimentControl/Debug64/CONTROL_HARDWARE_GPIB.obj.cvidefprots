[GPIB_addAvailableDevice]
Class="Function"
Prototype="void GPIB_addAvailableDevice(t_gpibDevice *dev);"

[GPIB_deviceInitAllAvailableDevices]
Class="Function"
Prototype="void GPIB_deviceInitAllAvailableDevices();"

[GPIB_outputPanel]
Class="Function"
Prototype="int GPIB_outputPanel();"

[GPIB_outputCtrl]
Class="Function"
Prototype="int GPIB_outputCtrl();"

[iberrStr]
Class="Function"
Prototype="const char *iberrStr();"

[ibstaStr]
Class="Function"
Prototype="char *ibstaStr();"

[MessagePopupAbortSequence]
Class="Function"
Prototype="int MessagePopupAbortSequence(char *format, ...);"

[ibstaCheck]
Class="Function"
Prototype="int ibstaCheck(int address, const char *command);"

[GPIB_checkStatus]
Class="Function"
Prototype="void GPIB_checkStatus();"

[GPIB_errorMessage]
Class="Function"
Prototype="int GPIB_errorMessage(int address);"

[GPIB_showDeviceErrorMessage]
Class="Function"
Prototype="int GPIB_showDeviceErrorMessage(int address, int errNo, char *str);"

[GPIB_setOutputCtrl]
Class="Function"
Prototype="void GPIB_setOutputCtrl(int panel, int ctrl);"

[GPIB_clearOutputCtrl]
Class="Function"
Prototype="void GPIB_clearOutputCtrl();"

[GPIB_autodetectBoard]
Class="Function"
Prototype="int GPIB_autodetectBoard();"

[GPIB_identifyDevice]
Class="Function"
Prototype="int GPIB_identifyDevice(t_gpibDevice *dev, const char *strIDN);"

[GPIB_open]
Class="Function"
Prototype="void GPIB_open(int address, int timeout);"

[GPIB_close]
Class="Function"
Prototype="int GPIB_close(int address);"

[GPIB_sendBinary]
Class="Function"
Prototype="int GPIB_sendBinary(int address, char *commandPrefix, short *binaryData, int nPoints, int dma);"

[GPIB_setShowDataFlag]
Class="Function"
Prototype="void GPIB_setShowDataFlag(int show);"

[GPIB_getShowDataFlag]
Class="Function"
Prototype="int GPIB_getShowDataFlag();"

[GPIB_sendMultipleLines]
Class="Function"
Prototype="int GPIB_sendMultipleLines(t_gpibCommand *g, char *str, int errorCheck);"

[GPIB_send]
Class="Function"
Prototype="int GPIB_send(int address, char *str);"

[GPIB_sendf]
Class="Function"
Prototype="int GPIB_sendf(int address, char *format, ...);"

[GPIB_receive]
Class="Function"
Prototype="int GPIB_receive(int address, char *str, int maxLength);"

[GPIB_resetOutput]
Class="Function"
Prototype="void GPIB_resetOutput();"

[GPIB_autoDetectDevice]
Class="Function"
Prototype="int GPIB_autoDetectDevice(t_config *oldConfig, t_gpibDevice *dev, int i);"

[GPIB_getErr]
Class="Function"
Prototype="int GPIB_getErr(t_gpibCommand *g, int showMessage);"

[GPIB_sendReset]
Class="Function"
Prototype="void GPIB_sendReset(int address);"

[GPIB_transmitCommandStrings]
Class="Function"
Prototype="int GPIB_transmitCommandStrings(t_gpibCommand *g);"

[GPIB_writeDataToOutputBuffer]
Class="Function"
Prototype="void GPIB_writeDataToOutputBuffer(t_gpibCommand *c, long *values, unsigned long *repeat, unsigned long nValues);"

[GPIB_writeWaveformToOutputBuffer]
Class="Function"
Prototype="void GPIB_writeWaveformToOutputBuffer(t_gpibCommand *c, t_waveform *wfm);"

[GPIB_digitizeParameters]
Class="Function"
Prototype="t_digitizeParameters *GPIB_digitizeParameters(t_gpibCommand *g);"

[GPIB_getStepFrequencyInHz]
Class="Function"
Prototype="double GPIB_getStepFrequencyInHz(t_sequence *seq, t_gpibCommand *g);"

[GPIB_resetAllLastValues]
Class="Function"
Prototype="void GPIB_resetAllLastValues(t_sequence *seq, int resetLeCroy, int resetWaveforms);"

[GPIB_transmittedDataChanged]
Class="Function"
Prototype="int GPIB_transmittedDataChanged(t_gpibDevice *dev, int devCh, t_outputData *out, int outCh);"

[GPIB_setLed]
Class="Function"
Prototype="void GPIB_setLed(int state, char *text);"

[GPIB_transmitCommand_wfm]
Class="Function"
Prototype="int GPIB_transmitCommand_wfm(t_sequence *s, t_gpibCommand *g);"

[GPIB_transmitCommand_powerSupply]
Class="Function"
Prototype="int GPIB_transmitCommand_powerSupply(t_sequence *s, t_gpibCommand *g, int waitUntilStabilized);"

[GPIB_transmitCommand_pulses]
Class="Function"
Prototype="int GPIB_transmitCommand_pulses(t_sequence *s, t_gpibCommand *g);"

[GPIB_MessagePopupDeviceNotSupported]
Class="Function"
Prototype="int GPIB_MessagePopupDeviceNotSupported(char *format, ...);"

[EXTDEV_fillDevicesToList]
Class="Function"
Prototype="void EXTDEV_fillDevicesToList(int panel, int control, int type);"

[GPIB_fillDevicesToList]
Class="Function"
Prototype="void GPIB_fillDevicesToList(int panel, int control, int type);"

[triggerLoop]
Class="Function"
Prototype="void triggerLoop();"

[recvTriggerLoop]
Class="Function"
Prototype="void recvTriggerLoop();"

[GPIB_transmitCommand]
Class="Function"
Prototype="int GPIB_transmitCommand(t_sequence *s, t_gpibCommand *g, int waitUntilStabilized, int allowAutodetect);"

[GPIB_TEST]
Class="Function"
Prototype="int GPIB_TEST(int panel, int control, int event, void *callbackData, int eventData1, int eventData2);"

[GPIB_displaySupportedDevices]
Class="Function"
Prototype="void GPIB_displaySupportedDevices(int panel, int ctrl);"

[GPIB_autodetectAllDevices]
Class="Function"
Prototype="int GPIB_autodetectAllDevices(int panel, int control);"

[GPIB_detectBoard]
Class="Function"
Prototype="int GPIB_detectBoard(int outPanel, int outCtrl);"

[GPIB_feedbackEnabled]
Class="Function"
Prototype="int GPIB_feedbackEnabled(t_gpibCommand *g);"

[GPIB_addFrequencyFeedbackToAllCommands]
Class="Function"
Prototype="int GPIB_addFrequencyFeedbackToAllCommands(t_sequence *seq, const char *path);"

[GPIB_frequencyFeedbackAppendValuesToFile]
Class="Function"
Prototype="int GPIB_frequencyFeedbackAppendValuesToFile(t_sequence *seq, t_gpibCommand *g);"

[GPIB_getFeedbackInputValue]
Class="Function"
Prototype="int GPIB_getFeedbackInputValue(t_sequence *seq, t_gpibCommand *g);"

